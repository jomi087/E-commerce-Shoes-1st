<!-- header -->
<%- include('../Z_Common_Code/userDashboard/header.ejs') %>

<!-- navbar -->
<%- include('../Z_Common_Code/userDashboard/navbar.ejs') %>

<!-- Main Content -->
<div class="container mt-4">
    <div class="row">
        <!-- Sidebar Section -->
        <div class="col-md-3 border-end border-dark">
            <div class="list-group shadow-sm p-3 bg-white rounded">
                <h4 class="mb-3 text-primary">Account Info</h4>
                <a href="/editProfile" class="list-group-item list-group-item-action">Update Profile</a>
                <a href="/address" class="list-group-item list-group-item-action">Manage Address</a>
                <a href="/order/history" class="list-group-item list-group-item-action">My Orders</a>
                <a href="/user/wallet" class="list-group-item list-group-item-action">Wallet <i class="bi bi-arrow-left"></i></a>
                <h4 class="mt-4 mb-3 text-primary">Personal</h4>
                <a href="#" class="list-group-item list-group-item-action">Terms of Use</a>
                <a href="#" class="list-group-item list-group-item-action">Privacy Policy</a>
                <a href="/logout" class="list-group-item list-group-item-action text-danger">Logout</a>
            </div>
        </div>

        <!-- Main Content Section -->
        <div class="col-md-9">
            <h2 class="mb-4 text-dark">Your Wallet</h2> 
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h4 class="card-title" style="font-family: 'Trebuchet MS', sans-serif;">Wallet Balance</h4>
                    <% if(wallet != null){ %>
                        <h2 class="text-success">₹<%= wallet.balance.toLocaleString('en-IN') %></h2>
                    <% }else { %>
                        <h2 class="text-success">₹0</h2>
                    <% } %>
                    <button class="btn btn-success mt-3" id="addMoney-btn" style="width: 200px;">Add Money</button>
                </div>
            </div>

            <!-- Wallet Transactions Table -->
            <% if(wallet) { %>
                <div class="table-responsive mt-5">
                    <table class="table table-hover align-middle shadow-sm">
                        <thead class="table-light">
                            <tr>
                                <th>Payment ID</th>
                                <th>Amount</th>
                                <th>Date</th>
                                <th>Type</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% wallet.transactions.forEach((transaction) => { %>
                                <tr>
                                    <td>
                                        <% if(transaction.razorPaymentId == null ){ %>
                                            <span class="text-danger">Payment Not Completed</span>
                                        <% } else { %>
                                            <%= transaction.razorPaymentId %>
                                        <% } %>
                                    </td>
                                    <td>₹<%= transaction.amount %></td>
                                    <td><%= new Date(transaction.createdAt).toLocaleString() %></td>
                                    <td>
                                        <span class="badge bg-<%= transaction.type === 'credit' ? 'success' : 'danger' %>">
                                            <%= transaction.type %>
                                        </span>
                                    </td>
                                    <td>
                                        <% if(transaction.status == 'success') { %>
                                            <span class="text-success"><i class="bi bi-check-circle"></i> Success</span>
                                        <% } else if(transaction.status == 'failed') { %>
                                            <span class="text-danger"><i class="bi bi-x-circle"></i> Failed</span>
                                        <% } else { %>
                                            <span class="text-warning"><i class="bi bi-exclamation-circle"></i> Pending</span>
                                        <% } %>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            <% } %>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>
    document.getElementById('addMoney-btn').addEventListener('click', async()=>{

        try {
            const Amount = await Swal.fire({
                title : "Add Money to Wallet",
                input : 'number',
                inputLabel : 'Enter the amount you would like to add to your wallet' ,
                inputPlaceholder : 'Enter Amount ',
                showCancelButton : true ,
                confirmButtonText: 'Add Funds',
                cancelButtonText: 'Cancel',
                inputValidator : (value)=> {
                    const amount = Number(value);      // Convert the value to a number  
                    if (!value || isNaN(amount)) {
                        return 'Please provide a valid amount';
                    } else if (amount < 50) {
                        return 'Minimum amount must be 50rs';
                    }
                }
            })

            if(Amount.isConfirmed && Amount.value ){
                const amount  = Amount.value;
                const response = await fetch ('/wallet/addMoney',{
                    method : 'POST',
                    headers : {
                        'Content-Type': 'application/json'
                    },
                    body : JSON.stringify({
                        amount
                    })
                })
                const result  = await response.json()
                console.log(result);
                

                if(result.success){    //or response.ok
                    console.log('result success')
                    const options = {
                        key : result.razorpayKeyId,
                        amount : result.razorpayOrder.amount,
                        currency : result.razorpayOrder.currency,
                        name: "Fashion Feet",
                        description: "Wallet Payment",
                        order_id: result.razorpayOrder.id,
                        handler : async function(response) {    //here the response will be getting from razor pay modal (which will be - payment id , order id , signature)
                            try{
                                const verifyResponse = await fetch('/walletPayment/verify',{
                                    method: "POST",
                                    headers : {
                                        'Content-Type' : 'application/json',
                                    },
                                    body : JSON.stringify({
                                        razorpayPaymentId : response.razorpay_payment_id,
                                        razorpayOrderId : response.razorpay_order_id,
                                        razorpaySignature : response.razorpay_signature,
                                    }),
                                })

                                const verifyResult = await verifyResponse.json()

                                if(verifyResult.success){
                                    await Swal.fire({
                                        icon: 'success',
                                        title: 'Payment Successful!',
                                        text: verifyResult.message||'Your Amount has been Successfully Credited to your Wallet.',
                                        confirmButtonText: 'OK'
                                    });
                                    location.reload()
                                }else{
                                    await Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Verification Failed',
                                        text: verifyResult.message||'Your payment could not be verified. Please try again.',
                                        confirmButtonText: 'ok'
                                    });
                                }
                            }catch(error){
                                console.error('Verification Error:', error);
                                await Swal.fire({
                                    icon: 'error',
                                    title: 'Network Error',
                                    text: 'An error occurred during payment verification. Please try again.',
                                    confirmButtonText: 'ok'
                                });
                            }
                        },
                        prefill:{
                            contact: result.userPhone,
                        },
                        theme : {
                            color: "#3399cc",
                        },
                    }
                    
                    const rzp = new Razorpay(options);

                    rzp.on('payment.failed',async function (response){
                        console.log('payment failed', response);

                        const failedResponse =  await fetch('/walletpayment/verify/failed',{
                            method : 'POST',
                            headers : {
                                'Content-Type' : 'application/json',
                            },
                            body : JSON.stringify({
                                error : response.error     
                            })  
                        }) 
                        const failedResult = await failedResponse.json();
                        console.log('failedResult',failedResult);
                        

                        if(failedResult.ok){
                            location.reload(true)
                        }
                    })         
                    rzp.open();

                }else{  
                    await Swal.fire({
                        icon: 'error',
                        title: 'Order Failed',
                        text: `Error: ${result.message || 'Something went wrong'}`,
                        confirmButtonText: 'ok'
                    });
                }
            }
        }catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                icon: 'error',
                title: 'Network Error',
                text: 'An error occurred while confirming your order. Please try again.',             
                confirmButtonText: 'ok'
            });
        }
    })
</script>

<!-- footer -->
<%- include('../Z_Common_Code/userDashboard/footer.ejs') %>
