<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fashion Feet</title>
    <!-- font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@400;700;900&family=Moul&display=swap" rel="stylesheet">
     <!-- cropperjs -->
     <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- my-css -->
    <link rel="stylesheet" href="styleadmin.css">
    <style>
        .error-message {
            color: red;
            font-size: 0.875em;
        }
    </style>
</head>

<body class="page-body">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg nav-bar-custom">
        <div class="container-fluid">
            <h3 class="text-white cinzel-decorative mt-2">Fashion Feet</h3>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="#">Account</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Settings</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/logout">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main content -->
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-2 sidebar p-3">
                <nav class="nav flex-column">
                    <a class="btn btn-primary nav-link" href="/admin/dashboard">Dashboard</a>
                    <a class="btn btn-primary nav-link" href="/admin/customer">Customers</a>
                    <a class="btn btn-primary nav-link" href="/admin/product">Products</a>
                    <a class="btn btn-primary nav-link" href="#">Orders</a>
                    <a class="btn btn-primary nav-link" href="#">Banner Management</a>
                    <a class="btn btn-primary nav-link" href="/admin/couponManagement">Coupon Management</a>
                    <a class="btn btn-primary nav-link" href="/admin/salesReport">Sales Report</a>
                    <a class="btn btn-primary nav-link" href="/admin/category">Category</a>
                </nav>
            </div>

            <!-- Content area -->
            <div class="col-md-8 content">
                <!-- Place your page-specific content here -->
                <div class="row">
                    <h3 class="border-bottom pb-1">  Edit product </h3>
                    <div class="col-md-10 offset-md-2">
                        <h6 class="text-danger text-center"><%= locals.message %></h6>
                        <form action="/admin/editProduct" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
                            <input type="hidden" name="id" value="<%=product._id%>">
                            <!-- Product Name -->
                            <div class="mb-3 row">
                                <label for="productName" class="col-sm-3 col-form-label">Product Name :</label>
                                <div class="col-sm-9">
                                    <input type="text" id="productName" name="Pname"  value="<%= product.productName%>" class="form-control" placeholder="Enter product name">
                                    <span id="productNameError" class="error-message"></span>
                                </div>
                            </div>
                            <!-- Category -->
                            <div class="mb-3 row">
                                <label for="category" class="col-sm-3 col-form-label">Category :</label>
                                <div class="col-sm-9">
                                    <select name="Pcategory" id="category"   class="form-control">
                                        <% category.forEach((category) => { %>
                                            <option value='<%= category._id %>' <%=product.category.name === category.name ? 'selected' : '' %>><%= category.name %> </option>
                                        <% }) %>
                                    </select>
                                    <span id="categoryError" class="error-message"></span>
                                </div>
                            </div>
                            <!-- Description -->
                            <div class="mb-3 row">
                                <label for="description" class="col-sm-3 col-form-label">Description :</label>
                                <div class="col-sm-9">
                                    <textarea id="description" name="Pdescription" class="form-control" rows="3" placeholder="Enter description"><%=product.description%></textarea>
                                    <span id="descriptionError" class="error-message"></span>
                                </div>
                            </div>
                            <!-- Regular Price -->
                            <div class="mb-3 row">
                                <label for="regularPrice" class="col-sm-3 col-form-label">Regular Price :</label>
                                <div class="col-sm-9">
                                    <input type="text" id="regularPrice" name="PregularPrice" value="<%=product.regularPrice%>" class="form-control" placeholder="Enter regular price">
                                    <span id="regularPriceError" class="error-message"></span>
                                </div>
                            </div>

                            <!-- Sale Price -->
                            <div class="mb-3 row">
                                <label for="salePrice" class="col-sm-3 col-form-label">Sale Price :</label>
                                <div class="col-sm-9">
                                    <input type="text" id="salePrice" name="PsalePrice" class="form-control"  value="<%=product.salePrice%>"  placeholder="Enter sale price">
                                    <span id="salePriceError" class="error-message"></span>
                                </div>
                            </div>

                            <!-- Units and Primary Color -->
                            <div class="mb-3 row">
                                <label for="units" class="col-sm-3 col-form-label">Units :</label>
                                <div class="col-sm-3">
                                    <input type="text" id="units" name="Punits" class="form-control" value="<%=product.unitsInStock%>" placeholder="Enter units">
                                    <span id="unitsError" class="error-message"></span>
                                </div>
                            </div>
                            <div class="mb-3 row">
                                <label for="primaryColor" class="col-sm-3 col-form-label">Primary Color :</label>
                                <div class="col-sm-3">
                                    <input type="text" id="primaryColor" name="PprimaryColor" class="form-control" value="<%=product.primaryColor%>"  placeholder="Enter color">
                                    <span id="primaryColorError" class="error-message"></span>
                                </div>
                                <!-- Size Dropdown Field -->
                                <label for="size" class="col-sm-3 col-form-label text-end">Size :</label>
                                <div class="col-sm-3">
                                    <select id="size" name="Psize" class="form-select">
                                        <option value="" disabled>Select size</option>    <!--  why  includes ? cz Size is stored in array in db -->
                                        <option value="1c" <%= product.sizesAvailable.includes("1c") ? 'selected' : '' %>>3-3.5 Years (1c)</option>
                                        <option value="2c" <%= product.sizesAvailable.includes("2c") ? 'selected' : '' %>>3.5-4 Years (2c)</option>
                                        <option value="3c" <%= product.sizesAvailable.includes("3c") ? 'selected' : '' %>>4-4.5 Years (3c)</option>
                                        <option value="4c"<%= product.sizesAvailable.includes("4c")  ? 'selected' : '' %>>4.5-5 Years (4c)</option>
                                        <option value="5c"<%= product.sizesAvailable.includes("5c")  ? 'selected' : '' %>>5-5.5 Years (5c)</option>
                                        <option value="6c"<%= product.sizesAvailable.includes("6c")  ? 'selected' : '' %>>5.5-6 Years (6c)</option> 

                                        <option value="1"<%= product.sizesAvailable.includes(1) ? 'selected' : '' %>>6-7 Years (1)</option>
                                        <option value="2"<%= product.sizesAvailable.includes(2) ? 'selected' : '' %>>7-8 Years (2)</option>
                                        <option value="3"<%= product.sizesAvailable.includes(3) ? 'selected' : '' %>>8-9 Years (3)</option>
                                        <option value="4"<%= product.sizesAvailable.includes(4) ? 'selected' : '' %>>9-10 Years (4)</option>
                                        <option value="5"<%= product.sizesAvailable.includes(5) ? 'selected' : '' %>>10-12 Years (5)</option> 

                                        <option value="6" <%= product.sizesAvailable.includes(6) ? 'selected' : '' %>>6</option>
                                        <option value="7" <%= product.sizesAvailable.includes(7) ? 'selected' : '' %>>7</option>
                                        <option value="8" <%= product.sizesAvailable.includes(8) ? 'selected' : '' %>>8</option>
                                        <option value="9" <%= product.sizesAvailable.includes(9) ? 'selected' : '' %>>9</option>
                                        <option value="10" <%= product.sizesAvailable.includes(10) ? 'selected' : '' %>>10</option>
                                        <option value="11" <%= product.sizesAvailable.includes(11) ? 'selected' : '' %>>11</option>
                                        <option value="12" <%= product.sizesAvailable.includes(12) ? 'selected' : '' %>>12</option>
                                    </select>
                                    <span id="sizeError" class="error-message"></span>
                                </div>
                            </div>
                            <!-- Upload Image + Preview Image -->
                            <div class="mb-3">
                                <label for="imageInput" class="form-label">Upload Images</label>
                                <div class="upload-image">
                                    <input type="file" name="Pimages" id="imageInput"  multiple accept="image/*"   > 

                                    <div id="imageContainer" style="position: relative;">
                                        <div id="currentImageWrapper" style="margin-bottom: 20px; max-height: 250px; max-width: 250px; position: relative; overflow: hidden;">
                                            <img id="currentImagePreview" style="display: none;" class="img-fluid">
                                            <button id="cropButton" style="display: none; margin-top: 10px; position: absolute; bottom: 0; left: 50%; transform: translateX(-50%);">Crop</button>
                                        </div>
                                        <div id="croppedImagesContainer" style="margin-top: 20px;"></div>
                                        <% product.images.forEach((image) => { %>
                                            <div class="existing-image" style="display: inline-block; position: relative; margin: 10px;">
                                                <img src="/imgs/product/<%= image %>" style="max-height: 160px;">
                                                <button type="button" class="existing-image-remove" data-image-src="<%= image %>" style="position: absolute; top: 0; right: 0;">X</button>
                                            </div>
                                        <% }) %>
                                        <input type="hidden" name="imagesToDelete" id="imagesToDeleteInput">
                                    </div>                                    
                                    <span id="imageError" class="error-message"></span>
                                </div>
                            </div>
                            <!-- Add Product Button -->
                            <div class="text-center">
                                <button type="submit" class="btn btn-success">UPDATE PRODUCT</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
     <!-- cropperjs -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

    <script>
   
        const imageInput = document.getElementById('imageInput');
        const currentImagePreview = document.getElementById('currentImagePreview');
        const cropButton = document.getElementById('cropButton');
        const croppedImagesContainer = document.getElementById('croppedImagesContainer');

        let cropper, fileQueue = [], currentIndex = 0, croppedImages = [];

        let imagesToDelete = [];

        // Existing images are rendered in the EJS template
        document.querySelectorAll('.existing-image-remove').forEach((button, index) => {
            button.addEventListener('click', () => {
                
                const imageSrc = button.dataset.imageSrc;
                imagesToDelete.push(imageSrc); // Mark image for deletion
                button.parentElement.remove(); // Remove the image from the UI
                console.log(imagesToDelete)
            });

        });

        imageInput.addEventListener('change', () => {

            fileQueue = Array.from(imageInput.files);
            console.log('1',imageInput.files)
            currentIndex = 0;
            if (fileQueue.length){
                showImageForCropping();
            }
        });

        cropButton.addEventListener('click', (e) => {
        e.preventDefault()

            const croppedImage = cropper.getCroppedCanvas().toDataURL('image/jpeg');
            croppedImages.push(croppedImage);
            currentImagePreview.style.display = 'none';
            cropButton.style.display = 'none';
            cropper.destroy();

            currentIndex++;
            if (currentIndex < fileQueue.length){
                showImageForCropping();
            }else {
                displayAllCroppedImages();
            }
        })
        
        function showImageForCropping() {
            const file = fileQueue[currentIndex];
            const reader = new FileReader();

            reader.onload = () => {
                currentImagePreview.src = reader.result;
                currentImagePreview.style.display = 'block';
                cropButton.style.display = 'block';

                if (cropper){ 
                    cropper.destroy();
                }
                cropper = new Cropper(currentImagePreview, { 
                    aspectRatio: 0, 
                    viewMode: 0
                });
            };
            reader.readAsDataURL(file);
        }

        function displayAllCroppedImages() {
            croppedImagesContainer.innerHTML = croppedImages.map((img,index) =>
            `<div style="display: inline-block; position: relative; margin: 10px;">
                    <img src="${img}" style="max-height: 160px;">
                    <button  onclick="removeCroppedImage(${index})" style="position: absolute; top: 0; right: 0;">X</button>
                </div>`
            ).join('');
        }

        function removeCroppedImage(index) {
            croppedImages.splice(index, 1); // Remove the image from the array
            fileQueue.splice(index, 1); // Remove the file from the fileQueue
        
            updateFileInput();// Update the file input to reflect the changes
            
            displayAllCroppedImages(); // Update the displayed images
        }

        function updateFileInput() {
            const dataTransfer = new DataTransfer();

            fileQueue.forEach(file => dataTransfer.items.add(file));
            
            imageInput.files = dataTransfer.files; // Update the file input with the new FileList
            console.log('2',imageInput.files)
        }


        function validateForm() {
        let isValid = true;
        const fileInput = document.getElementById('imageInput');
        const fileCount = fileInput.files.length;

        // Clear previous error messages
        document.querySelectorAll('.error-message').forEach(element => element.textContent = '');

        // Validate Product Name
        const productName = document.getElementById('productName').value.trim();
        if (!productName) {
            document.getElementById('productNameError').textContent = 'Product Name is required.';
            isValid = false;
        }
        // Validate Category
        const category = document.getElementById('category').value;
        if (!category) {
            document.getElementById('categoryError').textContent = 'Category is required.';
            isValid = false;
        }

        // Validate Description
        const description = document.getElementById('description').value.trim();
        if (!description) {
            document.getElementById('descriptionError').textContent = 'Description is required.';
            isValid = false;
        }

        // Validate Regular Price
        const regularPrice = document.getElementById('regularPrice').value.trim();
        if (!regularPrice) {
            document.getElementById('regularPriceError').textContent = 'Regular Price is required.';
            isValid = false;
        }else if(isNaN(regularPrice)) {
            document.getElementById('regularPriceError').textContent = 'Regular Price must be a valid number.';
            isValid = false;
        } else if(Number(regularPrice) <= 0) {
            document.getElementById('regularPriceError').textContent = 'Regular Price must be greater than zero.';
            isValid = false;
        }

        // Validate Sale Price
        const salePrice = document.getElementById('salePrice').value.trim();
        if (!salePrice) {
            document.getElementById('salePriceError').textContent = 'Sale Price is required.';
            isValid = false;
        }else if(isNaN(salePrice)) {
            document.getElementById('salePriceError').textContent = 'Sale Price must be a valid number.';
            isValid = false;
        } else if (Number(salePrice) < 0) {
            document.getElementById('salePriceError').textContent = 'Sale Price must be greater than or !Equal to zero.';
            isValid = false;
        }else if(Number(salePrice) > regularPrice ){
            document.getElementById('salePriceError').textContent = 'Sale Price must noT be greater than Regular Price';
            isValid = false;
        }
        // Validate Units
        const units = document.getElementById('units').value.trim();
        if (!units) {
            document.getElementById('unitsError').textContent = 'Units is required.';
            isValid = false;
        } else if (isNaN(units)) {
            document.getElementById('unitsError').textContent = 'UNITS MUST BE IN NUMBER';
        }

        // Validate Primary Color
        const primaryColor = document.getElementById('primaryColor').value.trim();
        if (!primaryColor) {
            document.getElementById('primaryColorError').textContent = 'Primary Color is required.';
            isValid = false;
        }

        // Validate Size
        const size = document.getElementById('size').value;
        if (!size) {
            document.getElementById('sizeError').textContent = 'Size is required.';
            isValid = false;
        }

        // Validate Images
        // if (fileCount < 3 || fileCount > 5) {
        //     document.getElementById('imageError').textContent = 'Please upload between 3 and 5 images.';
        //     isValid = false;
        // }

        document.getElementById('imagesToDeleteInput').value = JSON.stringify(imagesToDelete);
        // console.log(document.getElementById('imagesToDeleteInput').value)

            return isValid;
    }
    </script>

</body>

</html>
